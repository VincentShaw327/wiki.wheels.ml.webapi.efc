(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{1068:function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var i,l=P(a(231)),c=P(a(1111)),n=P(a(1200)),r=P(a(115)),o=P(a(1274)),u=P(a(1112)),d=P(a(1127)),s=P(a(64)),f=P(a(1167)),p=P(a(218)),h=P(a(1290)),m=P(a(44)),y=P(a(1291)),v=P(a(23)),k=P(a(7)),g=P(a(221)),T=P(a(88)),C=P(a(18)),E=P(a(21)),A=P(a(22)),b=P(a(27)),x=P(a(225));a(1113),a(1292),a(116),a(1297),a(1114),a(1171),a(1172),a(219),a(1300),a(220),a(1302),a(227);var _=a(4),L=P(_),N=a(154),S=a(1129),w=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&(t[a]=e[a]);return t.default=e,t}(S),j=P(a(16)),I=P(a(1303));function P(e){return e&&e.__esModule?e:{default:e}}var O=x.default.Item,q=x.default.create()(i=(0,N.connect)(function(e,t){return{topicList:e.topicList}})(i=function(e){function t(e){(0,C.default)(this,t);var a=(0,A.default)(this,(t.__proto__||(0,T.default)(t)).call(this,e));return a.onCellChange=function(e,t,i){return function(l){var c=(0,g.default)((0,k.default)({},t),(0,v.default)({},i,l));a.props.dispatch(w.putTopic(e,c))}},a.topicDelete=function(e,t){var i=(0,g.default)((0,k.default)({},t),{nDelFlag:0});a.props.dispatch(w.deleteTopic(e,i))},a.state={cid:1,topicType:0,pagination:{pageSize:20,current:0,hideOnSinglePage:!0},loading:!1,data:[],curTopicType:"1"},a.handleCreate=a.handleCreate.bind(a),a}return(0,b.default)(t,e),(0,E.default)(t,[{key:"componentDidMount",value:function(){this.fetchList(),this.props.dispatch(w.fetchCategory())}},{key:"fetchList",value:function(){var e=(arguments.length>0&&void 0!==arguments[0]?arguments[0]:{}).cgid,t=void 0===e?1:e;this.props.dispatch(w.fetchTopic(t))}},{key:"handleCreate",value:function(){var e=this,t=this.props.form,a=this.state.curTopicType,i=void 0===a?1:a;t.validateFields(function(a,l){if(!a){l.uObjectCategoryUUID=1;var c={strID:l.strID,strName:l.strName,strNote:l.strNote,uObjectCategoryUUID:i};e.props.dispatch((0,S.addTopic)(c)),t.resetFields(),e.setState({visible:!1})}})}},{key:"MenuSelect",value:function(e){this.fetchList({cgid:parseInt(e,10)}),this.setState({curTopicType:e})}},{key:"render",value:function(){var e=this,t=this.props.topicList,a=t.typelist,i=this.state,l=i.curTopicType,v=i.visible,g=[{title:"主题",dataIndex:"strName",key:"strName",width:"120px",render:function(t,a){return L.default.createElement(I.default,{value:t,onChange:e.onCellChange(a.id,a,"strName")})}},{title:"备注",dataIndex:"strNote",key:"strNote",width:"300px",render:function(t,a){return L.default.createElement(I.default,{value:t,onChange:e.onCellChange(a.id,a,"strNote")})}},{title:"操作",dataIndex:"id",width:80,key:"id",render:function(t,a){return L.default.createElement("span",null,L.default.createElement("a",{onClick:function(){e.props.history.push("wiki/"+a.id)}}," 详情"),L.default.createElement(y.default,{type:"vertical"}),L.default.createElement(h.default,{title:"Are you sure？",onConfirm:function(){return e.topicDelete(t,a)},icon:L.default.createElement(m.default,{type:"question-circle-o",style:{color:"red"}})},L.default.createElement("a",null,"删除")))}}],T={labelCol:{span:8},wrapperCol:{span:14}},C=this.props.form.getFieldDecorator,E=L.default.createElement(f.default,{visible:v,title:"新主题",okText:"创建",okCancel:"取消",onCancel:function(){return e.setState({visible:!1})},onOk:this.handleCreate},L.default.createElement(x.default,{layout:"horizontal"},L.default.createElement(O,(0,k.default)({label:"主题"},T),C("strName",{rules:[{required:!0,message:"请输入"}]})(L.default.createElement(p.default,{type:"textarea"}))),L.default.createElement(O,(0,k.default)({label:"标签"},T),C("strID",{rules:[{required:!0,message:"请输入"}]})(L.default.createElement(p.default,null))),L.default.createElement(O,(0,k.default)({label:"备注"},T),C("strNote",{})(L.default.createElement(p.default,null)))));return L.default.createElement("div",{style:{padding:"25px"}},L.default.createElement(c.default,{gutter:16},L.default.createElement(u.default,{span:0},L.default.createElement(d.default,{defaultSelectedKeys:[l],onSelect:function(t){var a=t.key;(0,s.default)(t,["key"]);return e.MenuSelect(a)}},a.map(function(e){return L.default.createElement(d.default.Item,{key:e.key},e.strTitle)}))),L.default.createElement(u.default,{span:24},L.default.createElement(o.default,null,L.default.createElement(D,{data:a,defaultKey:"1",onSelect:function(t){console.log("key",t),e.MenuSelect(t)}})),L.default.createElement(r.default,{type:"primary",onClick:function(){return e.setState({visible:!0})},style:{margin:"8px 0"}},"添加"),L.default.createElement(n.default,{size:"small",rowKey:function(e){return e.id},columns:g,dataSource:t.list,loading:t.loading,style:{background:"white"},pagination:{hideOnSinglePage:!0}}))),E)}}]),t}(_.Component))||i)||i;t.default=q;var D=function(e){function t(e){(0,C.default)(this,t);var a=(0,A.default)(this,(t.__proto__||(0,T.default)(t)).call(this,e));return a.state={list:e.list,activedKey:e.defaultKey},a.radioClicked=a.radioClicked.bind(a),a}return(0,b.default)(t,e),(0,E.default)(t,[{key:"radioClicked",value:function(e){var t=e.currentTarget.children,a=e.target,i=a.dataset.key;(0,l.default)(t).forEach(function(e){return e.classList.remove("actived")}),a.classList.add("actived"),this.props.onSelect(i)}},{key:"render",value:function(){var e=this;return L.default.createElement(_.Fragment,null,L.default.createElement("div",{className:"s-ele-radio",onClick:this.radioClicked},L.default.createElement("span",{className:"name"},this.props.name||"主题:"),this.props.data.map(function(t){var a;return L.default.createElement("span",(a={className:"item"},(0,v.default)(a,"className",(0,j.default)({item:!0,actived:e.state.activedKey==t.key})),(0,v.default)(a,"key",t.key),(0,v.default)(a,"data-key",t.key||t.id),a),t.strTitle)})))}}]),t}(_.Component)},1129:function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.setCurrentTopic=t.fetchTypeList=t.updateTopic=t.fetchTopicList=t.fetchWiki=t.addTopic=t.deleteTopic=t.putTopic=t.fetchCategory=t.fetchTopic=void 0;var i=a(118),l=a(584),c=a(11),n=(t.fetchTopic=(0,c.createAxiosGet)(c.ajax.fetchJSONByGet("/topic"),(0,i.createAction)("reqTopicList"),(0,i.createAction)("fetchTopic")),t.fetchCategory=(0,c.createAxiosGet)(c.ajax.fetchJSONByGet("/categories"),(0,i.createAction)("reqCategoryList"),(0,i.createAction)("fetchCategory")),t.putTopic=(0,c.createAxiosPut)(c.ajax.axiosPut("/topic"),(0,i.createAction)("reqTopicList"),(0,i.createAction)("putTopic")),t.deleteTopic=(0,c.createAxiosPut)(c.ajax.axiosPut("/topic"),(0,i.createAction)("reqTopicList"),(0,i.createAction)("succDelTopic")),t.addTopic=(0,c.createAxiosAction)(c.ajax.axiosFetchPost("/topic"),(0,i.createAction)(""),(0,i.createAction)("succAddTopic")),t.fetchWiki=(0,c.createAxiosAction)(c.ajax.axiosFetchPost("/wiki/item"),(0,i.createAction)("reqWikiItemList"),(0,i.createAction)("fetchWikiItemList")),t.fetchTopicList=(0,c.createAjaxAction)(l.common.topic_list,(0,i.createAction)("reqTopicList"),(0,i.createAction)("resTopicList")));t.updateTopic=(0,c.createAjaxAction)(l.common.topic_list,(0,i.createAction)("reqTopicList"),(0,i.createAction)("succUpdateTopic")),t.fetchTypeList=(0,c.createAjaxAction)(l.common.category_list,(0,i.createAction)("reqTypeList"),(0,i.createAction)("resTypeList")),t.setCurrentTopic=(0,i.createAction)("setCurTopic");t.default=n},1303:function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var i=s(a(44)),l=s(a(218)),c=s(a(88)),n=s(a(18)),r=s(a(21)),o=s(a(22)),u=s(a(27));a(220),a(219);var d=s(a(4));function s(e){return e&&e.__esModule?e:{default:e}}a(1304);var f=function(e){function t(e){(0,n.default)(this,t);var a=(0,o.default)(this,(t.__proto__||(0,c.default)(t)).call(this,e));return a.state={value:a.props.value,editable:!1},a.handleChange=a.handleChange.bind(a),a.check=a.check.bind(a),a.edit=a.edit.bind(a),a}return(0,u.default)(t,e),(0,r.default)(t,[{key:"handleChange",value:function(e){var t=e.target.value;this.setState({value:t})}},{key:"check",value:function(){this.setState({editable:!1}),this.props.onChange&&this.props.onChange(this.state.value)}},{key:"edit",value:function(){this.setState({editable:!0})}},{key:"render",value:function(){var e=this.state,t=e.value,a=e.editable,c=this.props.children;return d.default.createElement("span",{className:"editable-cell",style:{display:"inline-block"}},a?d.default.createElement("div",{className:"editable-cell-input-wrapper"},d.default.createElement(l.default,{value:t,onChange:this.handleChange,onPressEnter:this.check,style:{display:"inline-block"}}),d.default.createElement(i.default,{type:"check",className:"editable-cell-icon-check",onClick:this.check})):d.default.createElement("div",{className:"editable-cell-text-wrapper"},c||t||" ",d.default.createElement(i.default,{type:"edit",className:"editable-cell-icon",onClick:this.edit})))}}]),t}(d.default.Component);t.default=f},1304:function(e,t,a){}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=7.03bd.js.map