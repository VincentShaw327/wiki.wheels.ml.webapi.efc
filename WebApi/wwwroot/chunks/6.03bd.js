(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{1083:function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var i,n=I(a(1111)),o=I(a(1112)),r=I(a(1173)),l=I(a(88)),c=I(a(18)),d=I(a(21)),u=I(a(22)),s=I(a(27));a(1113),a(1114);var f=a(4),p=I(f),m=a(154),h=a(1305),v=(a(1130),a(1129)),k=I(a(1319)),g=I(a(1374));function I(e){return e&&e.__esModule?e:{default:e}}var y=(0,m.connect)(function(e,t){return{topicList:e.topicList,wikiItem:e.wikiItem}})(i=function(e){function t(e,a){(0,c.default)(this,t);var i=(0,u.default)(this,(t.__proto__||(0,l.default)(t)).call(this,e));return i.state={_topic_id:""},i.fetchNav=i.fetchNav.bind(i),i}return(0,s.default)(t,e),(0,d.default)(t,[{key:"componentDidMount",value:function(){this.fetchNav()}},{key:"fetchNav",value:function(){var e={uTopicUUID:this.props.match.params.id,uObjectParentUUID:0};this.props.dispatch((0,v.fetchWiki)(e))}},{key:"render",value:function(){var e,t=(e=this.props,(0,r.default)(e),e),a=t.wikiItem,i=(t.topicList,a.currentTopicItem.strName);return p.default.createElement("div",{className:"wiki-wrap"},p.default.createElement(n.default,{gutter:16,className:"content-row"},p.default.createElement(o.default,{span:5},p.default.createElement(h.Scrollbars,{autoHide:!0,autoHeight:!0,autoHideTimeout:1e3,autoHideDuration:200,autoHeightMin:"75vh",autoHeightMax:"90vh",thumbMinSize:30,universal:!0},p.default.createElement("div",{className:"navTreeWrap"},p.default.createElement("span",{className:"name"},i||""),p.default.createElement(k.default,null)))),p.default.createElement(o.default,{className:"gutter-row",span:18},p.default.createElement(h.Scrollbars,{autoHide:!0,autoHeight:!0,autoHideTimeout:1e3,autoHideDuration:200,autoHeightMin:"85vh",autoHeightMax:"90vh",thumbMinSize:30},p.default.createElement(g.default,null)))))}}]),t}(f.Component))||i;t.default=y},1129:function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.setCurrentTopic=t.fetchTypeList=t.updateTopic=t.fetchTopicList=t.fetchWiki=t.addTopic=t.deleteTopic=t.putTopic=t.fetchCategory=t.fetchTopic=void 0;var i=a(118),n=a(584),o=a(11),r=(t.fetchTopic=(0,o.createAxiosGet)(o.ajax.fetchJSONByGet("/topic"),(0,i.createAction)("reqTopicList"),(0,i.createAction)("fetchTopic")),t.fetchCategory=(0,o.createAxiosGet)(o.ajax.fetchJSONByGet("/categories"),(0,i.createAction)("reqCategoryList"),(0,i.createAction)("fetchCategory")),t.putTopic=(0,o.createAxiosPut)(o.ajax.axiosPut("/topic"),(0,i.createAction)("reqTopicList"),(0,i.createAction)("putTopic")),t.deleteTopic=(0,o.createAxiosPut)(o.ajax.axiosPut("/topic"),(0,i.createAction)("reqTopicList"),(0,i.createAction)("succDelTopic")),t.addTopic=(0,o.createAxiosAction)(o.ajax.axiosFetchPost("/topic"),(0,i.createAction)(""),(0,i.createAction)("succAddTopic")),t.fetchWiki=(0,o.createAxiosAction)(o.ajax.axiosFetchPost("/wiki/item"),(0,i.createAction)("reqWikiItemList"),(0,i.createAction)("fetchWikiItemList")),t.fetchTopicList=(0,o.createAjaxAction)(n.common.topic_list,(0,i.createAction)("reqTopicList"),(0,i.createAction)("resTopicList")));t.updateTopic=(0,o.createAjaxAction)(n.common.topic_list,(0,i.createAction)("reqTopicList"),(0,i.createAction)("succUpdateTopic")),t.fetchTypeList=(0,o.createAjaxAction)(n.common.category_list,(0,i.createAction)("reqTypeList"),(0,i.createAction)("resTypeList")),t.setCurrentTopic=(0,i.createAction)("setCurTopic");t.default=r},1130:function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.setTopicID=t.itemSelected=t.deleteWikiItem=t.updateWikiContent=t.dragMove=t.udChildren=t.addWikiItem=t.fetchWikiContent=t.setTopicItem=t.expandNav=void 0;var i=a(118),n=a(584),o=a(11),r=(t.expandNav=(0,o.createAxiosAction)(o.ajax.axiosFetchPost("/wiki/item"),(0,i.createAction)(""),(0,i.createAction)("resExpandNav")),t.setTopicItem=(0,o.createAjaxAction)(n.common.topic_list,(0,i.createAction)("reqTopicItem"),(0,i.createAction)("resTopicItem")),t.fetchWikiContent=(0,o.createAjaxAction)(n.common.wiki_item,(0,i.createAction)("reqWikiContent"),(0,i.createAction)("resWikiContent")));t.addWikiItem=(0,o.createAxiosAction)(o.ajax.axiosFetchPost("/wiki"),(0,i.createAction)(""),(0,i.createAction)("succAddItem")),t.udChildren=(0,o.createAxiosAction)(o.ajax.axiosFetchPost("/wiki/updateChildren"),(0,i.createAction)(""),(0,i.createAction)("succUDChildren")),t.dragMove=(0,o.createAxiosAction)(o.ajax.axiosFetchPost("/wiki/drag"),(0,i.createAction)(""),(0,i.createAction)("succdragMove")),t.updateWikiContent=(0,o.createAxiosPut)(o.ajax.axiosPut("/wiki"),(0,i.createAction)("reqWikiContent"),(0,i.createAction)("sucUpdateWikiContent")),t.deleteWikiItem=(0,o.createAxiosPut)(o.ajax.axiosPut("/wiki"),(0,i.createAction)(""),(0,i.createAction)("succDelItem")),t.itemSelected=(0,i.createAction)("setCurWikiContent"),t.setTopicID=(0,i.createAction)("setTopicID");t.default=r},1319:function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var i,n=h(a(232)),o=h(a(88)),r=h(a(18)),l=h(a(21)),c=h(a(22)),d=h(a(27)),u=h(a(4)),s=a(154),f=a(1130),p=a(1622),m=h(p);function h(e){return e&&e.__esModule?e:{default:e}}var v=(0,s.connect)(function(e,t){return{wikiItem:e.wikiItem}})(i=function(e){function t(e){var a=arguments;(0,r.default)(this,t);var i=(0,c.default)(this,(t.__proto__||(0,o.default)(t)).call(this,e));i.onExpand=function(e,t){console.log("onExpand",e,t,a)},i.onSelect=function(e,t){var a=t.node.props.id;console.log("selected===",e,t),i.props.dispatch((0,f.itemSelected)(a))},i.onCheck=function(e,t){console.log("onCheck",e,t)},i.onLoadData=function(e){var t=i.props.wikiItem,a=t.currentTopicItem.id,o=e.props.eventKey.split("-"),r={uTopicUUID:a,uObjectParentUUID:parseInt(o.pop(),10),nDelFlag:1};return console.log("load data...",t,e,r),new n.default(function(e){i.props.dispatch((0,f.expandNav)(r,function(t){return e()}))})},i.onDragStart=function(e){console.log("DragStart",e)},i.onDragEnter=function(e){console.log("DragEnter",e),i.setState({expandedKeys:e.expandedKeys})};var l=e.keys;return i.state={defaultExpandedKeys:l,defaultSelectedKeys:l,defaultCheckedKeys:l,treeData:[],checkedKeys:["0-0"]},i.onDrop=i.onDrop.bind(i),i}return(0,d.default)(t,e),(0,l.default)(t,[{key:"onDragEnd",value:function(e){console.log("DragEnd",e)}},{key:"onDragLeave",value:function(e){console.log("DragLeave",e)}},{key:"onDragOver",value:function(e){console.log("DragOver",e)}},{key:"onRightClick",value:function(e){console.log("RightClick",e)}},{key:"onDrop",value:function(e){console.log("info: ",e);var t=0,a=0,i=0,n=e.dragNode,o=e.dropToGap,r=(e.dragNodeKeys,e.dropPosition,e.event,e.node),l=n.props.id;console.log("dragNode: ",n);var c=n.props.eventKey,d=r.props.eventKey,u=r.props.pos.split("-").pop(),s=n.props.pos.split("-"),p=c.split("-"),m=d.split("-");t=o&&m.length>=2?m[m.length-2]:m.pop(),p.length>=2&&(a=p[p.length-2]),s.length>=2&&(i=s.pop());var h={dropToGap:o,id:l,pid:t=parseInt(t,10),dragPid:a,prePos:i,dropPosition:parseInt(u,10)};this.props.dispatch((0,f.dragMove)(h))}},{key:"render",value:function(){var e=function e(t){return t.map(function(t){return t.children?u.default.createElement(p.TreeNode,{title:t.name,key:t.key},e(t.children)):u.default.createElement(p.TreeNode,{title:t.name,key:t.key,isLeaf:t.isLeaf,disabled:"0-0-0"===t.key,id:t.id})})}(this.props.wikiItem.list);return u.default.createElement(m.default,{className:"myCls",showLine:!0,showIcon:!1,selectable:!0,draggable:!0,onExpand:this.onExpand,onSelect:this.onSelect,onCheck:this.onCheck,onRightClick:this.onRightClick,onDrop:this.onDrop,loadData:this.onLoadData},e)}}]),t}(u.default.Component))||i;t.default=v},1374:function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var i,n=F(a(223)),o=F(a(1111)),r=F(a(1124)),l=F(a(115)),c=F(a(44)),d=F(a(1112)),u=F(a(218)),s=F(a(1127)),f=F(a(1173)),p=F(a(228)),m=F(a(7)),h=F(a(221)),v=F(a(88)),k=F(a(18)),g=F(a(21)),I=F(a(22)),y=F(a(27)),T=F(a(225)),D=F(a(1167));a(224),a(1113),a(1170),a(116),a(220),a(1114),a(219),a(1171),a(230),a(227),a(1172);var E=a(4),C=F(E),x=a(1130),b=a(154),A=F(a(1375)),_=(a(595),F(a(3))),w=F(a(1377)),U=F(a(1378));function F(e){return e&&e.__esModule?e:{default:e}}var L=D.default.confirm,P=T.default.Item,S=T.default.create()(i=(0,b.connect)(function(e,t){return{wikiItem:e.wikiItem}})(i=function(e){function t(e){(0,k.default)(this,t);var a=(0,I.default)(this,(t.__proto__||(0,v.default)(t)).call(this,e));return a.state={bIsEdit:!1,_title:e.wikiItem.currentItem.strTitle,showDModal:!1,loading:!1,uTempParentUUID:0,data:{uObjectUUID:0,uObjectParentUUID:0,uCategoryUUID:0,uTopicUUID:0,strTitle:"",strLabel:"",strNote:"-",strContent:"",uCreatorUUID:0,dtUpdateDateTime:"2018-05-01 00:00:00"}},a._handleEdit=a._handleEdit.bind(a),a._handleDelete=a._handleDelete.bind(a),a._handleSave=a._handleSave.bind(a),a._handleMenuClick=a._handleMenuClick.bind(a),a.handleCreate=a.handleCreate.bind(a),a}return(0,y.default)(t,e),(0,g.default)(t,[{key:"componentDidMount",value:function(){var e=this.props.wikiItem.currentItem;this.setState({_title:e.strTitle})}},{key:"_handleEdit",value:function(){this.setState({bIsEdit:!0})}},{key:"handleCreate",value:function(){var e=this,t=this.props,a=t.wikiItem,i=t.form,n=this.state.uTempParentUUID,o=a.currentItem.id,r=a.currentItem.uObjectParentUUID,l=a.currentTopicItem.id||0;i.validateFields(function(t,a){if(!t){var c={uObjectParentUUID:n,uTopicUUID:parseInt(l),strTitle:a.strTitle,dtCreate:(0,_.default)().format("YYYY-MM-DD hh:mm:ss"),dtUpdate:(0,_.default)().format("YYYY-MM-DD hh:mm:ss")},d={ID:o,uObjectParentUUID:r};e.props.dispatch((0,x.addWikiItem)(c,function(t){e.props.dispatch((0,x.udChildren)(d))})),i.resetFields(),e.setState({visible:!1})}})}},{key:"_handleSave",value:function(){var e=this,t=this.props.wikiItem,a=this.mdedit.getValue();a=a.replace(/'/g,'"');var i=this.refTitle.state.value;console.log("开始保存:",this.mdedit,a,i);var n={strTitle:i,strContent:a},o=t.currentItem.id,r=(0,h.default)((0,m.default)({},t.currentItem),n);this.props.dispatch((0,x.updateWikiContent)(o,r,function(t){p.default.success("保存成功!"),e.setState({bIsEdit:!1})}))}},{key:"_handleDelete",value:function(){var e=this,t=this.props.wikiItem,a=t.currentItem.id,i={ID:a,uObjectParentUUID:t.currentItem.uObjectParentUUID},n=(0,h.default)((0,m.default)({},t.currentItem),{nDelFlag:0});this.props.dispatch((0,x.deleteWikiItem)(a,n,function(){console.log("成功删除,开始更新叶子节点状态"),e.props.dispatch((0,x.udChildren)(i))}))}},{key:"_handleMenuClick",value:function(e){console.log("click",e);var t=this.props.wikiItem;switch(e.key){case"TOP":this.setState({visible:!0,uTempParentUUID:0});break;case"SIBLING":this.setState({visible:!0,uTempParentUUID:t.currentItem.uObjectParentUUID});break;case"CHILD":this.setState({visible:!0,uTempParentUUID:t.currentItem.id});break;case"COPY":var a="http://wiki.top-link.me/#/item/:"+this.state.data.uObjectUUID;(0,A.default)(a),p.default.success("复制成功，如果失败，请在输入框内手动复制.")}}},{key:"render",value:function(){var e,t=this,a=this.state,i=(a.enableDel,a.bIsEdit),p=(a.data,a.visible),h=this.props.wikiItem,v=(e=h,(0,f.default)(e),e),k=v.currentItem,g=k.dtCreate,I=k.dtUpdate,y=k.id,E=k.uObjectParentUUID,x=(v.currentTopicItem,this.props.form.getFieldDecorator),b=C.default.createElement(s.default,{onClick:this._handleMenuClick},C.default.createElement(s.default.Item,{key:"TOP"},"顶级知识"),C.default.createElement(s.default.Item,{key:"SIBLING",disabled:!h.selectedTree},"同级知识"),C.default.createElement(s.default.Item,{key:"CHILD",disabled:!h.selectedTree},"子级知识"),C.default.createElement(s.default.Item,{key:"COPY",disabled:!h.selectedTree},"复制到剪贴板")),A=C.default.createElement(D.default,{visible:p,title:"新文档资料",okText:"创建",okCancel:"取消",onCancel:function(){return t.setState({visible:!1})},onOk:function(){return t.handleCreate()}},C.default.createElement(T.default,{layout:"horizontal"},C.default.createElement(P,(0,m.default)({label:"文档名称"},j),x("strTitle",{rules:[{required:!0,message:"请输入"}]})(C.default.createElement(u.default,null))))),_=C.default.createElement(o.default,{type:"flex",align:"middle",style:{height:60}},C.default.createElement(d.default,{span:16,style:{textAlign:"left"}},C.default.createElement("div",{style:{fontSize:"2em",color:"#387bb5"}},h.currentItem.strTitle)),C.default.createElement(d.default,{span:8,style:{fontSize:18,textAlign:"right"}},C.default.createElement(r.default,{overlay:b},C.default.createElement(l.default,{type:"primary",style:{fontSize:16,marginLeft:"3px"}},"添加",C.default.createElement(c.default,{type:"down"}))),C.default.createElement(l.default,{type:"default",style:{fontSize:16,marginLeft:"3px"},disabled:!h.selectedTree,onClick:this._handleEdit},C.default.createElement(c.default,{type:"edit"}),"编辑"),C.default.createElement(l.default,{type:"danger",disabled:!h.selectedTree,style:{fontSize:16,marginLeft:"3px"},onClick:function(){return M()}},C.default.createElement(c.default,{type:"delete"}),"删除"))),F=C.default.createElement("div",{style:{margin:"13px 0"}},C.default.createElement(o.default,null,C.default.createElement(d.default,{span:18,style:{fontSize:18,textAlign:"left"}},C.default.createElement(u.default,{ref:function(e){return t.refTitle=e},placeholder:"标题",style:{fontSize:18,width:"100%"},defaultValue:h.currentItem.strTitle,disabled:!1})),C.default.createElement(d.default,{span:6,style:{fontSize:18,textAlign:"right"}},C.default.createElement(l.default,{type:"primary",style:{fontSize:16,marginLeft:"3px"},onClick:this._handleSave},C.default.createElement(c.default,{type:"save"}),"保存")," ",C.default.createElement(l.default,{type:"default",style:{fontSize:16,marginLeft:"3px"},onClick:function(){return t.setState({bIsEdit:!1})}},C.default.createElement(c.default,{type:"save"}),"取消")))),S=C.default.createElement(o.default,{style:{fontSize:12,width:"100%",height:"41px",lineHeight:"41px",borderTop:"1px solid #FFFFFF",borderLeft:"1px solid #FFFFFF",borderRight:"1px solid #FFFFFF",borderBottom:"0px solid #FFFFFF",backgroundColor:"#FFFFFF"}},C.default.createElement(d.default,{span:4},"id: ",y||(0==y?0:"-")),C.default.createElement(d.default,{span:4},"pid: ",E||(0==E?0:"-")),C.default.createElement(d.default,{span:6},"创建时间: ",g||"-"),C.default.createElement(d.default,{span:6},"最后编辑:",I||"-")),j={labelCol:{span:8},wrapperCol:{span:14}},M=function(){return L({title:"确定要删除此项吗?",content:"Some descriptions",onOk:function(){console.log("OK"),t._handleDelete()},onCancel:function(){console.log("Cancel")}})};return C.default.createElement(n.default,{spinning:this.state.loading},C.default.createElement("div",{className:"md-content-wrap"},i?F:_,S,A,C.default.createElement("div",{className:"content-wrap"},h.selectedTree?i?C.default.createElement(w.default,{ref:function(e,a){t.mdedit=e},value:h.currentContent}):C.default.createElement(U.default,{value:h.currentContent||"无内容"}):"")))}}]),t}(E.Component))||i)||i;t.default=S},1377:function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var i=u(a(88)),n=u(a(18)),o=u(a(21)),r=u(a(22)),l=u(a(27)),c=a(4),d=u(c);a(154);function u(e){return e&&e.__esModule?e:{default:e}}a(1066);var s=void 0,f=function(e){function t(e,a){(0,n.default)(this,t);var o=(0,r.default)(this,(t.__proto__||(0,i.default)(t)).call(this,e));return o.getValue=function(){return s.getMarkdown()},o.state={},o}return(0,l.default)(t,e),(0,o.default)(t,[{key:"componentDidMount",value:function(){var e=this;$(function(){s=editormd("editormd",{path:"/static/lib/",markdown:e.props.value||"",imageUpload:!0,imageUploadURL:gconfig.linkUrl+"/api/upload/do",imageFormats:["jpg","jpeg","gif","png","bmp","webp"],emoji:!0}),console.log("editormd",editormd,s)})}},{key:"render",value:function(){return d.default.createElement("div",{style:{height:"82vh"}},d.default.createElement("div",{id:"editormd"}))}}]),t}(c.Component);t.default=f},1378:function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var i,n=p(a(88)),o=p(a(18)),r=p(a(21)),l=p(a(22)),c=p(a(27)),d=a(4),u=p(d),s=a(154),f=p(a(1379));function p(e){return e&&e.__esModule?e:{default:e}}a(1066);var m=a(1566)({html:!0,linkify:!0,typographer:!0,highlight:function(e,t){if(t&&f.default.getLanguage(t))try{return f.default.highlight(t,e).value}catch(e){}return""}}),h=(0,s.connect)(function(e,t){return{topicList:e.topicList,wikiItem:e.wikiItem}})(i=function(e){function t(e,a){(0,o.default)(this,t);var i=(0,l.default)(this,(t.__proto__||(0,n.default)(t)).call(this,e));return i.state={_topic_id:""},i}return(0,c.default)(t,e),(0,r.default)(t,[{key:"componentDidMount",value:function(){editormd.markdownToHTML("doc-content",{markdown:this.props.value,theme:"dark",previewTheme:"dark",editorTheme:"pastel-on-dark",emoji:!0,taskList:!0,tex:!0,flowChart:!0,sequenceDiagram:!0,codeFold:!0})}},{key:"componentWillMount",value:function(){m.render("")}},{key:"render",value:function(){$("#doc-content").html("");editormd.markdownToHTML("doc-content",{markdown:this.props.value,theme:"dark",previewTheme:"dark",editorTheme:"pastel-on-dark",emoji:!0,taskList:!0,tex:!0,flowChart:!0,sequenceDiagram:!0,codeFold:!0});return u.default.createElement("div",{style:{minHeight:"82vh"},className:"web-font",id:"doc-content"})}}]),t}(d.Component))||i;t.default=h}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=6.03bd.js.map